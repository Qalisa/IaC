{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "inputs": [
        {
          "description": "CAREFUL - Branch name to override",
          "type": "promptString",
          "default": "",
          "id": "branch-to-override"
        },
        {
          "description": "CAREFUL - Branch name to copy from",
          "type": "promptString",
          "default": "",
          "id": "branch-to-copy"
        },
        {
          "id": "confirmation",
          "type": "promptString",
          "description": "CAREFUL !!!! You will override a branch on the remote, this is irreversible. Type 'agree' to continue",
          "default": ""
        }
      ],
    "tasks": [
        {
            "label": "‚úÖ CF Zero-Trust: apply application policies",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production",
                // "--vault-password-file .ansible-vault-pw",
                "ansible/playbooks/site.services.yml",
                "--tags", "zto-app"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚úÖ Kyverno: apply policies",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production",
                // "--vault-password-file .ansible-vault-pw",
                "ansible/playbooks/_.site.services.yml",
                "--tags", "kyverno-policy"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚úÖ ArgoCD: Install Applications",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production",
                // "--vault-password-file .ansible-vault-pw",
                "ansible/playbooks/_.site.services.yml",
                "--tags", "argocd-apps"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        //
        //
        //
        {
            "label": "üìù Ensure [site.services] playbook exist",
            "type": "shell",
            "linux": {
                "command": "cp -R -u -p _.site.services.yml site.services.yml",
            },
            "osx": {
                "command": "rsync -a --update _.site.services.yml site.services.yml",
            },
            "options": {
                "cwd": "${workspaceFolder}/ansible/playbooks",
                "statusbar": {
                    "hide": true
                },
            }
        },
        //
        //
        //
        {
            "label": "üöÄ Install: Sidekick",
            "detail": "Ensure EE is built before running this",
            "type": "shell",
            "command": "ansible-navigator",
            "args": [
                "run", "playbooks/site.sidekick.yml",
                "-i", "inventories/production",
                "--execution-environment-image", "iac_ee:latest", 
                "--eev", "~/.ssh:/runner/.ssh:ro",
                "--mode", "stdout", 
                "--pull-policy", "never",
                "--enable-prompts", 
                "-u", "root",
                // "--skip-tags", "zto-app"
                // "-k", "-K"
            ],
            "options": {
                "cwd": "${workspaceFolder}/ansible"
            },
            "problemMatcher": []
        },
        {
            "label": "üöÄ Install: Services",
            "detail": "Ensure EE is built before running this",
            "dependsOn": "üìù Ensure [site.services] playbook exist",
            "type": "shell",
            "command": "ansible-navigator",
            "args": [
                "run", "playbooks/site.services.yml",
                "-i", "inventories/production",
                "--execution-environment-image", "iac_ee:latest", 
                "--eev", "~/.ssh:/runner/.ssh:ro",
                "--mode", "stdout", 
                "--pull-policy", "never",
                "--enable-prompts", 
                "-u", "root",
                // "--skip-tags", "zto-app"
                // "-k", "-K"
            ],
            "options": {
                "cwd": "${workspaceFolder}/ansible"
            },
            "problemMatcher": []
        },
        {
            "label": "üöÄ Install: k3s",
            "detail": "Ensure EE is built before running this",
            "type": "shell",
            "command": "ansible-navigator",
            "args": [
                "run", "playbooks/site.k3s.yml",
                "-i", "inventories/production",
                "--execution-environment-image", "iac_ee:latest", 
                "--eev", "~/.ssh:/runner/.ssh:ro",
                "--mode", "stdout", 
                "--pull-policy", "never",
                "--enable-prompts", 
                "-u", "root", 
                // "-k", "-K"
            ],
            "options": {
                "cwd": "${workspaceFolder}/ansible"
            },
            "problemMatcher": []
        },
        ///
        ///
        ///
        {
            "label": "üîì Ansible Vault: Decrypt",
            "type": "shell",
            "command": [
                "ansible-vault",
                "decrypt",
                "ansible/inventories/production/group_vars/all/vault",
                "--vault-password-file .ansible-vault-pw"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üîí Ansible Vault: Encrypt",
            "type": "shell",
            "command": [
                "ansible-vault",
                "encrypt",
                "ansible/inventories/production/group_vars/all/vault",
                "--vault-password-file .ansible-vault-pw"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üß∂ Lint: Autofix whole project",
            "type": "shell",
            "command": "ansible-lint --fix"
        },
        //
        //
        //
        {
            "label": "‚õè0. Install Builder Dependencies",
            "detail": "python3, pipx, container daemon... See https://github.com/pypa/pipx, https://docs.ansible.com/ansible/latest/getting_started_ee/setup_environment.html.",
            "type": "shell",
            "osx": {
                "command": [
                    "brew install --cask orbstack", "&&", 
                    "brew install python3 pipx", "&&",
                    "pipx ensurepath", "&&", "sudo pipx ensurepath --global"
                ]
            },
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè1. Install Ansible Tools",
            "detail": "Linter, EE Builder and Navigator... See https://ansible.readthedocs.io/projects/dev-tools/installation/",
            "type": "shell",
            "command": "pipx install --include-deps ansible-dev-tools",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè2. Build EE",
            "detail": "See https://docs.ansible.com/ansible/latest/getting_started_ee/build_execution_environment.html#building-execution-environment",
            "type": "shell",
            "command": "ansible-builder",
            "args": [
                "build", 
                "--tag", "iac_ee", 
                "--container-runtime","docker"
            ],
            "options": {
                "cwd": "${workspaceFolder}/ansible/ee"
            }
        },
        //
        //
        //
        {
            "label": "‚ö†Ô∏è Override branch with another",
            "type": "shell",
            "command": "if [ \"${input:confirmation}\" = \"agree\" ]; then git checkout ${input:branch-to-override} && git reset --hard ${input:branch-to-copy} && git push --force; else echo 'Did not agree explicitely'; exit 0; fi",
            "problemMatcher": [],
            "options": {
                "statusbar": {
                    "hide": true
                }
            }
        },
    ]
}