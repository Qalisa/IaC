{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "inputs": [
        {
            "id": "nsToDelete",
            "description": "Please input the namespace to delete:",
            "default": "",
            "type": "promptString"
        },
    ],
    "tasks": [
        {
            "label": "üëÆ‚Äç‚ôÄÔ∏è Enforce namespace deletion",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--become --become-user=root",
                "ansible/playbooks/namespace-deletion.yml",
                "--e='ns=${input:nsToDelete}'"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üîì Unseal HC Vault",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "ansible/playbooks/unseal-vault.yml",
                "--tags", "unseal"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚úÖ Ensure Mail Accounts Folder Permissions",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "ansible/playbooks/mail-ensure-permissions.yml",
                "--tags", "mail-acc-ensure-permissions"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        //
        //
        //
        {
            "label": "üêõ Install few...",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/few.yml",
                // "-t", "creds",
                // "--skip-tags", "terraform"
            ],
            "problemMatcher": []
        },
        {
            "label": "üöÄ Install whole site !",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/site.yml",
                // "--skip-tags", "terraform"
            ],
            "problemMatcher": []
        },
        {
            "label": "üîí Update Ansible's encrypted vault",
            "type": "shell",
            "command": [
                "ansible-vault",
                "encrypt",
                "ansible/inventories/production/group_vars/all/vault",
                "--vault-password-file .ansible-vault-pw"
            ],
            "problemMatcher": []
        },
        //
        //
        //
        {
            "label": "üîÑ Upgrade cluster (kubespray)",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/upgrade-cluster.yml"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üóë Delete k8s cluster (kubespray)",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/reset.yml"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üß∂ Lint whole project",
            "type": "shell",
            "command": "ansible-lint"
        },
        ///
        ///
        ///
        {
            "label": "‚õè0. Install pipX",
            "type": "shell",
            "hide": true,
            "linux": {
                "command": "sudo apt-get -qq -y install pipx > /dev/null && pipx ensurepath"
            },
            "osx": {
                "command": "brew install pipx && pipx ensurepath"
            },
            "windows": {
                // TODO:
            },
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè1. Install Ansible & tools",
            "type": "shell",
            "dependsOn": "‚õè0. Install pipX",
            "command": "pipx install --include-deps ansible-dev-tools",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè2pre. Inject to ansible pipX env Kubespray requirements",
            "type": "shell",
            "command": "pipx inject ansible-dev-tools distlib",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "hide": true,
            "problemMatcher": []
        },
        {
            "label": "‚õè2a. Install IaC requirements",
            "type": "shell",
            "dependsOn": "‚õè2pre. Inject to ansible pipX env Kubespray requirements",
            "command": "ansible-galaxy collection install -r ansible/requirements.yml",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè2b. Upgrade IaC requirements",
            "type": "shell",
            "dependsOn": "‚õè2pre. Inject to ansible pipX env Kubespray requirements",
            "command": "ansible-galaxy collection install -U -r ansible/requirements.yml",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
    ]
}