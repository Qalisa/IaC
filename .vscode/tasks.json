{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "inputs": [
        {
            "id": "nsToDelete",
            "description": "Please input the namespace to delete",
            "default": "",
            "type": "promptString"
        },
        {
            "id": "helmPackage",
            "description": "Please input the helm installation to remove",
            "default": "",
            "type": "promptString"
        },
        {
            "id": "helmNamespace",
            "description": "Please input the namespace to remove the helm installation from",
            "default": "",
            "type": "promptString"
        },
    ],
    "tasks": [
        {
            "label": "üëÆ‚Äç‚ôÄÔ∏è k8s: Delete namespace",
            "type": "shell",
            "command": [
                "kubectl delete namespace ${input:nsToDelete}"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üëÆ‚Äç‚ôÄÔ∏è helm: Uninstall",
            "type": "shell",
            "command": [
                "helm uninstall ${input:helmPackage} -n ${input:helmNamespace}"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        //
        //
        //
        {
            "label": "‚úÖ CF Zero-Trust: apply application policies",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "ansible/playbooks/site.services.yml",
                "--tags", "zto-app"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üîì Hachicorp Vault: Unseal",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "ansible/playbooks/_unseal-vault.yml",
                "--tags", "unseal"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚úÖ mailserver: Ensure Mail Accounts Folder Permissions",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "ansible/playbooks/_mail-ensure-permissions.yml",
                "--tags", "mail-acc-ensure-permissions"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        //
        //
        //
        {
            "label": "üöÄ Install: whole site !",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/site.yml"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üöÄ Install: K8s only",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/site.kubernetes.yml"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üöÄ Install: Services Only",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/site.services.yml"
            ],
            "problemMatcher": []
        },
        ///
        ///
        ///
        {
            "label": "üîì Ansible Vault: Decrypt",
            "type": "shell",
            "command": [
                "ansible-vault",
                "decrypt",
                "ansible/inventories/production/group_vars/all/vault",
                "--vault-password-file .ansible-vault-pw"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üîí Ansible Vault: Encrypt",
            "type": "shell",
            "command": [
                "ansible-vault",
                "encrypt",
                "ansible/inventories/production/group_vars/all/vault",
                "--vault-password-file .ansible-vault-pw"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        //
        //
        //
        {
            "label": "üîÑ kubespray: Upgrade cluster",
            "type": "shell",
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/_upgrade-cluster.yml"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üóë kubespray: Delete cluster",
            "type": "shell",
            // or: kubeadm reset
            "command": [
                "ansible-playbook",
                "-i ansible/inventories/production/hosts",
                "--vault-password-file .ansible-vault-pw",
                "--become --become-user=root",
                "ansible/playbooks/_reset.yml"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "üß∂ Lint: whole project",
            "type": "shell",
            "command": "ansible-lint"
        },
        ///
        ///
        ///
        {
            "label": "‚õè0. Install pipX",
            "type": "shell",
            "hide": true,
            "linux": {
                "command": "sudo apt-get -qq -y install pipx > /dev/null && pipx ensurepath"
            },
            "osx": {
                "command": "brew install pipx && pipx ensurepath"
            },
            "windows": {
                // TODO:
            },
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè1. Install Ansible & tools",
            "type": "shell",
            "dependsOn": "‚õè0. Install pipX",
            "command": [
                "pipx install --include-deps ansible-core==2.16.4", "&&",
                "pipx install ansible-lint"
            ],
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè2pre. Inject to ansible pipX env Kubespray requirements",
            "type": "shell",
            "command": "pipx inject ansible-core distlib",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "hide": true,
            "problemMatcher": []
        },
        {
            "label": "‚õè2a. Install IaC requirements",
            "type": "shell",
            "dependsOn": "‚õè2pre. Inject to ansible pipX env Kubespray requirements",
            "command": "ansible-galaxy collection install -r ansible/requirements.yml",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "‚õè2b. Upgrade IaC requirements",
            "type": "shell",
            "dependsOn": "‚õè2pre. Inject to ansible pipX env Kubespray requirements",
            "command": "ansible-galaxy collection install -U -r ansible/requirements.yml",
            "options": {
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
    ]
}