---
# - name: Install Docker + KubeSpray requisites
#   hosts: all
#   become: true
#   roles:
#     - base.common
#    - base.kubespray

# # runs the kubespray's "reset.yml" playbook - delete all that Kubespray could have installed
# - name: Reset any Kubespray cluster installed
#   ansible.builtin.import_playbook: kubernetes_sigs.kubespray.reset

# # runs the kubespray's "cluster.yml" playbook - Installs Kubespray configuration
# - name: Install & Configure Kubernetes cluster & tools (Containerd, Helm, Ingress Controllers...)
#   ansible.builtin.import_playbook: kubernetes_sigs.kubespray.cluster

# ensure services roles are installed and configured AFTER kubernetes is set
- name: Install Services w/in Kubernetes
  hosts: all
  become: true
  roles:
    # - role: diodonfrost.terraform # Install Terraform CLI
    # - role: more.kubespray # Finish kubespray configuration
    # - role: more.docker # Install docker for building images
    - role: k8s.kilo # VPN for k8s
    # - role: k8s.registry # Finish registry configuration (installed along kubespray)
    # - role: k8s.cert-manager # Finish cert-manager configuration (installed along kubespray)
    # - role: k8s.dashboard # Setup dashboard (NOT installed from kubespray since it is outdated)
    # - role: k8s.prometheus-stack # OPTIONAL
    # - role: k8s.webmin # OPTIONAL
    # - role: k8s.portainer-ce # OPTIONAL
    # - role: k8s.openldap
    # - role: k8s.docker-mailserver
    # - role: k8s.listmonk # OPTIONAL
    # - role: k8s.github-arc #Â OPTIONAL, local runners
    # - role: k8s.matomo # OPTIONAL
    # - role: k8s.hc-vault # OPTIONAL, allow secure storage of private keys
    # # - role: k8s.sentry # OPTIONAL (high resources usage !)
    # - role: k8s.argo-cd
    # # - role: k8s.minio # Storage Object service for storing backups and snapshots
    # # - role: k8s.velero #
