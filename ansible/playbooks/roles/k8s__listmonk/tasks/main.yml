---
- name: Create Persistent Volume dir paths
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ iac__pv_path__listmonk__db }}"
    - "{{ iac__pv_path__listmonk__uploads }}"

- name: Install listmonk
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/ns.yml.j2
      - path: templates/db/pv.yml.j2
      - path: templates/db/pvc.yml.j2
      - path: templates/db/service.yml.j2
      - path: templates/db/deploy.yml.j2
      - path: templates/db/config.yml.j2
      - path: templates/app/pv-uploads.yml.j2
      - path: templates/app/pvc-uploads.yml.j2
      - path: templates/app/secret.yml.j2
      - path: templates/app/service.yml.j2
      - path: templates/app/deploy.yml.j2
      - path: templates/app/ingress.yml.j2
      - path: templates/app/config.yml.j2

- name: Wait for pod to become ready
  ansible.builtin.command: |
    kubectl wait
    pods -l app=listmonk
    --namespace=listmonk
    --for=condition=Ready
    --timeout=240s
  register: pods_ready
  changed_when: pods_ready.rc != 0

- name: Pause for 5 secs
  ansible.builtin.pause:
    seconds: 5

- name: Update settings
  ansible.builtin.uri:
    url: "{{ k8s__listmonk_api_url_part }}/settings"
    url_username: "{{ listmonk__admin_username }}"
    url_password: "{{ listmonk__admin_password }}"
    validate_certs: false
    method: PUT
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      # app
      app.lang: fr
      app.root_url: https://{{ k8s__listmonk__external_hostname }}
      app.site_name: "{{ listmonk__site_name }}"
      app.logo_url: "{{ listmonk__logo_url }}"
      app.favicon_url: "{{ listmonk__favicon_url }}"
      app.from_email: "{{ listmonk__from_email }}"
      app.enable_public_subscription_page: true
      app.enable_public_archive: true
      app.send_optin_confirmation: true
      app.check_updates: true
      # performance
      app.batch_size: 1000
      app.concurrency: 10
      app.max_send_errors: 1000
      app.message_rate: 10
      # upload
      upload.provider: filesystem
      upload.filesystem.upload_path: uploads
      upload.filesystem.upload_uri: /uploads
      upload.extensions: [".*", ".png"]
      # privacy
      privacy.unsubscribe_header: true
      privacy.allow_blocklist: true
      privacy.allow_preferences: true
      privacy.allow_export: true
      privacy.allow_wipe: true
      #
      # bounce.enabled: false
      # bounce.webhooks_enabled: true
      # bounce.actions.soft.count: 1
      # bounce.actions.soft.action: "none"
      # bounce.actions.hard.count: 1
      # bounce.actions.hard.action: "none"
      # bounce.actions.complaint.count: 1
      # bounce.actions.complaint.action: "none"
      # bounce.ses_enabled: false
      # bounce.sendgrid_enabled: false
      # bounce.sendgrid_key: ""
      # bounce.postmark.enabled: false
      # bounce.postmark.username: ""
      # bounce.postmark.password: ""
      # bounce.mailboxes: []
      #
      smtp:
        - uuid: ""
          enabled: true
          port: 587
          host: "{{ docker_mailserver__server_hostname }}.{{ docker_mailserver__namespace }}"
          hello_hostname: "{{ docker_mailserver__external_hostname }}"
          auth_protocol: login
          tls_type: STARTTLS
          tls_skip_verify: true
          max_conns: 10
          max_msg_retries: 2
          idle_timeout: 15s
          wait_timeout: 5s
          username: "{{ iac__donotreply_username }}"
          password: "{{ iac__donotreply_password }}"
          email_headers: []
