---
- name: Install Secrets
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/tenant/ns.yml.j2
      - path: templates/tenant/secret.yml.j2

- name: Install minIO tenant w/ Helm
  kubernetes.core.helm:
    name: tenant
    chart_ref: minio-operator/tenant
    release_namespace: minio-tenant
    create_namespace: false
    wait: true
    values:
      ingress:
        console:
          enabled: true
          ingressClassName: "{{ ingress_nginx_class }}"
          host: minio-console.{{ root_domain }}
          annotations:
            # when using Cloudflare's proxied DNS record
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
            cert-manager.io/cluster-issuer: "{{ org_ca_name }}"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            #
            ingress-dashboard/title: MinIO Tenant
            ingress-dashboard/description: Object store for DB and backups
            ingress-dashboard/logo-url: /favicon.ico
            ingress-dashboard/assume-tls: "true"
            ingress-dashboard/hide: "false"
            #
            cloudflare-access/must-secure: "true"
      secrets: # override to empty, replaced by "tenant.configSecret"
      tenant:
        ###
        # The Kubernetes secret name that contains MinIO environment variable configurations.
        # The secret is expected to have a key named config.env containing environment variables exports.
        configuration:
          name: myminio-env-configuration
        configSecret:
          ##
          # If this variable is set to true, then enable the usage of an existing Kubernetes secret to set environment variables for the Tenant.
          # The existing Kubernetes secret name must be placed under .tenant.configuration.name e.g. existing-minio-env-configuration
          # The secret must contain a key ``config.env``.
          # The values should be a series of export statements to set environment variables for the Tenant.
          # For example:

          # .. code-block:: shell

          #    stringData:
          #       config.env: |-
          #         export MINIO_ROOT_USER=ROOTUSERNAME
          #         export MINIO_ROOT_PASSWORD=ROOTUSERPASSWORD
          existingSecret: true
        pools:
          - servers: 1
            name: pool-0
            volumesPerServer: 1
            size: 20Gi
            storageClassName: local-path
            ###
            # The Kubernetes `SecurityContext <https://kubernetes.io/docs/tasks/configure-pod-container/security-context/>`__ to use for deploying Tenant resources.
            #
            # You may need to modify these values to meet your cluster's security and access settings.
            #
            # We recommend disabling recursive permission changes by setting ``fsGroupChangePolicy`` to ``OnRootMismatch`` as those operations can be expensive for certain workloads (e.g. large volumes with many small files).
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
              fsGroupChangePolicy: "OnRootMismatch"
              runAsNonRoot: true
            ###
            # The Kubernetes `SecurityContext <https://kubernetes.io/docs/tasks/configure-pod-container/security-context/>`__ to use for deploying Tenant containers.
            # You may need to modify these values to meet your cluster's security and access settings.
            containerSecurityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
