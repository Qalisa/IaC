---
- name: Search for pod exact name
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name = argocd-server
  register: pod_name_search

##
## Interract with API, register repo and creds
##
- name: Read keys as raw bytes
  ansible.builtin.slurp:
    src: "{{ argocd_admin_pwd_path }}"
  register: admin_pwd
- name: Get ArgoCD authentication token
  ansible.builtin.uri:
    url: "{{ argocd_api_url_part }}/session"
    validate_certs: false
    method: POST
    body_format: json
    body:
      username: "admin"
      password: "{{ admin_pwd.content | b64decode }}"
  register: argocd_auth_response

- name: Add Github repository creds to ArgoCD
  ansible.builtin.uri:
    url: "{{ argocd_api_url_part }}/repocreds"
    validate_certs: false
    method: POST
    headers:
      Authorization: "Bearer {{ argocd_auth_response.json.token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "git"
      url: "{{ github_org_url }}"
      githubAppID: "{{ argocd_github_app_app_id }}"
      githubAppInstallationID: "{{ argocd_github_app_installation_id }}"
      githubAppPrivateKey: "{{ argocd_github_app_priv_key }}"

- name: Install App of apps repository to ArgoCD
  kubernetes.core.k8s:
    state: present
    template:
      - path: "templates/app-of-apps.yml.j2"

#
- name: Install ArgoCD notifications for Github
  kubernetes.core.k8s:
    state: present
    template:
      - path: "templates/github-notifications-secret.yml.j2"
      - path: "templates/github-notifications-configuration.yml.j2"

- name: Force sync of app of Apps repo
  ansible.builtin.uri:
    url: "{{ argocd_api_url_part }}/applications/{{ argocd_app_of_apps_name }}/sync"
    validate_certs: false
    method: POST
    headers:
      Authorization: "Bearer {{ argocd_auth_response.json.token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      project: "default"
      namespace: "{{ argocd_apps_namespace }}"
