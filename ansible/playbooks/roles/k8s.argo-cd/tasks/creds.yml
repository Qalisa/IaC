---
##
##
##

- name: Save password
  block:
    - name: Search for pod exact name
      kubernetes.core.k8s_info:
        kind: Pod
        label_selectors:
          - app.kubernetes.io/name = argocd-server
      register: pod_name_search
    - name: Argocd autogenerated initial password
      kubernetes.core.k8s_exec:
        namespace: argocd
        pod: "{{ pod_name_search.resources[0].metadata.name }}"
        command: argocd admin initial-password -n argocd
      register: argocd_init_admin_pwd
    - name: Make sure destination dir exists
      ansible.builtin.file:
        path: "{{ generated_creds_dir }}"
        state: directory
    - name: Save
      ansible.builtin.copy:
        content: "{{ argocd_init_admin_pwd.stdout_lines[0] }}"
        dest: "{{ argocd_admin_pwd_path }}"

##
## Interract with API, register repo and creds
##
- name: Read keys as raw bytes
  ansible.builtin.slurp:
    src: "{{ argocd_admin_pwd_path }}"
  register: admin_pwd
- name: Get ArgoCD authentication token
  ansible.builtin.uri:
    url: "{{ argocd_cluster_api_url }}/session"
    validate_certs: false
    method: POST
    body_format: json
    body:
      username: "admin"
      password: "{{ admin_pwd.content | b64decode }}"
  register: argocd_auth_response

##
- name: Create auth token for Github Syncer and bind it to repositories on Github Org
  block:
    - name: Generate new token
      register: syncer_token
      ansible.builtin.uri:
        url: "{{ argocd_cluster_api_url }}/account/{{ argocd_github_syncer_acc_name }}/token"
        validate_certs: false
        method: POST
        headers:
          Authorization: "Bearer {{ argocd_auth_response.json.token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          expiresIn: 0 # never expires
    - name: Make sure destination dir exists
      ansible.builtin.file:
        path: "{{ generated_creds_dir }}"
        state: directory
    - name: Save
      ansible.builtin.copy:
        content: "{{ syncer_token.json.token }}"
        dest: "{{ argocd_syncer_token_path }}"
    - name: Add secrets to Github org
      community.general.terraform:
        project_path: "{{ terraform_project_path }}/gha-expose-secrets"
        state: present
        force_init: true
        complex_vars: true
        variables:
          github_organization: "{{ github_org }}"
          github_token: "{{ ansible_github_var_secrets_pat }}"
          #
          secrets:
            argocd_syncer_token: "{{ lookup('ansible.builtin.file', argocd_syncer_token_path) }}"

#
- name: Add Github repository creds to ArgoCD
  ansible.builtin.uri:
    url: "{{ argocd_cluster_api_url }}/repocreds"
    validate_certs: false
    method: POST
    headers:
      Authorization: "Bearer {{ argocd_auth_response.json.token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "git"
      url: "{{ github_org_url }}"
      githubAppID: "{{ argocd_github_app_app_id }}"
      githubAppInstallationID: "{{ argocd_github_app_installation_id }}"
      githubAppPrivateKey: "{{ argocd_github_app_priv_key }}"
