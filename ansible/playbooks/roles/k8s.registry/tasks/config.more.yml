---

- name: Create Persistent Volume dir path
  tags: [config-more]
  ansible.builtin.file:
    path: "{{ registry_pv_path }}"
    state: directory
    mode: '0755'

- name: Prepare registry storage + certs for HTTPS
  tags: [config-more]
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/registry/pv.yml.j2
      - path: templates/registry/sc.yml.j2

#
#
#

- name: Add variables to Github org
  tags: [config-more]
  community.general.terraform:
    project_path: "{{ terraform_project_path }}/gha-expose-secrets"
    state: present
    force_init: true
    complex_vars: true
    variables:
      github_organization: "{{ github_org }}"
      github_token: "{{ ansible_github_var_secrets_pat }}"
      #
      variables:
        private_repository_socket: "{{ registry_host }}"
        private_repository_full: "{{ registry_host }}/{{ registry_default_push_user }}"

#
# Add auth to Docker Repository
#

- name: Patch registry services + config to allow HTTPS & generate cert
  tags: [config-more]
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/registry/https-patch/service.yml.j2
      - path: templates/registry/https-patch/config.yml.j2
      - path: templates/registry/https-patch/server-cert.yml.j2

# might be extensively long depending on provider
- name: Wait for the associated certificate's secret to be generated
  tags: [config-more]
  ansible.builtin.command: kubectl get secret registry-server-tls -n kube-system
  register: secret_status
  until: secret_status.rc == 0
  retries: 20
  delay: 20

- name: Setup replica set patch payload
  tags: [config-more]
  ansible.builtin.set_fact:
    # Allows 443 binding
    registry_pod_env_replace:
      - op: add
        path: /spec/template/spec/containers/0/securityContext
        value:
          capabilities:
            add:
              - NET_BIND_SERVICE
            drop:
              - ALL
      - op: replace
        path: /spec/template/spec/containers/0/env
        value:
          - name: REGISTRY_STORAGE_DELETE_ENABLED
            value: 'true'
          - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
            value: /var/lib/registry
      - op: replace
        path: /spec/template/spec/containers/0/ports
        value:
          - containerPort: 5000
            name: registry
            protocol: TCP
      - op: replace
        path: /spec/template/spec/containers/0/readinessProbe/httpGet/port
        value: 5000
      - op: replace
        path: /spec/template/spec/containers/0/readinessProbe/httpGet/scheme
        value: HTTPS
      - op: replace
        path: /spec/template/spec/containers/0/livenessProbe/httpGet/port
        value: 5000
      - op: replace
        path: /spec/template/spec/containers/0/livenessProbe/httpGet/scheme
        value: HTTPS
      - op: replace
        path: /spec/template/spec/containers/0/volumeMounts
        value:
          - mountPath: /var/lib/registry
            name: registry-pvc
          - mountPath: /etc/docker/registry
            name: registry-config
          - name: certs
            mountPath: /certs
      - op: replace
        path: /spec/template/spec/volumes
        value:
          - name: registry-pvc
            persistentVolumeClaim:
              claimName: registry-pvc
          - configMap:
              defaultMode: 420
              name: registry-config
            name: registry-config
          - name: certs
            secret:
              secretName: registry-server-tls

- name: Patch replica set
  tags: [config-more]
  ansible.builtin.command: |
    kubectl patch
    rs registry
    -n kube-system
    --type='json' -p='{{ registry_pod_env_replace | to_json }}'

- name: Search for pod exact name
  tags: [config-more]
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - k8s-app = registry
  register: pod_name_search

- name: Regenerate Registry Pod from replica set
  tags: [config-more]
  ansible.builtin.command: |
    kubectl delete
    pod {{ pod_name_search.resources[0].metadata.name }}
    -n kube-system
