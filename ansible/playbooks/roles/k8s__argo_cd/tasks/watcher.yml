---
- name: Get JWT Secrets
  kubernetes.core.k8s_info:
    kind: Secret
    name: "{{ argo_cd__jwt_tokens_secret }}"
    namespace: "{{ argo_cd__namespace }}"
  register: jwt_secrets

- name: Put JWT into variable
  ansible.builtin.set_fact:
    jwt_token: "{{ jwt_secrets.resources[0].data[argocd__account_for__argo_watcher] }}"

- name: Save Watcher Secret with JWT token
  kubernetes.core.k8s:
    template:
      - path: templates/watcher/secret.yml.j2

##
##
##

- name: Add stable chart repo
  tags: [image-updater]
  kubernetes.core.helm_repository:
    name: shini4i
    repo_url: https://shini4i.github.io/charts/

- name: Install ArgoCD Watcher w/ Helm
  tags: [image-updater]
  kubernetes.core.helm:
    name: "{{ k8s__argo_cd__watcher__internal_name }}"
    chart_ref: shini4i/argo-watcher
    release_namespace: "{{ argo_cd__namespace }}"
    create_namespace: true
    wait: true
    values:
      argo:
        url: http://{{ k8s__argo_cd__server_internal_hostname }}
        # although using admin user is not a problem, we recommend creating a separate user for Argo Watcher
        # policy.csv example:
        # p, role:watcher, applications, get, */*, allow
        # p, role:watcher, applications, sync, */*, allow
        # g, watcher, role:watcher
        # secret with ARGO_TOKEN key and optional ARGO_WATCHER_DEPLOY_TOKEN (should match ARGO_WATCHER_DEPLOY_TOKEN on client side)
        secretName: "argo-watcher"
      ingress:
        enabled: true
        className: "{{ iac__ingress_class_name }}"
        annotations:
          #
          external-dns.alpha.kubernetes.io/hostname: "{{ k8s__argo_cd__external_hostname__watcher }}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          #
          ingress-dashboard/title: ArgoCD Watcher
          ingress-dashboard/description: Tracks continuous delivery of generated Docker Images of CI into cluster
          ingress-dashboard/logo-url: /favicon.ico
          ingress-dashboard/assume-tls: "true"
          ingress-dashboard/hide: "false"
        hosts:
          - host: "{{ k8s__argo_cd__external_hostname__watcher }}"
            paths:
              - path: /
                pathType: ImplementationSpecific
