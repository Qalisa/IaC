---
- name: Install LDAP for Python (1/2)
  ansible.builtin.apt:
    pkg:
      - python3-ldap
      - python3-passlib
    update_cache: true

- name: Wait for OpenLDAP pod to become ready
  register: pods_ready
  changed_when: pods_ready.rc != 0
  ansible.builtin.command: |
    kubectl wait pod/openldap-0 --namespace={{ openldap_stack__namespace }} --for=condition=Ready --timeout=240s

###
###
###

- name: Create Root DC
  community.general.ldap_entry:
    server_uri: "{{ openldap_stack__ldap_uri }}"
    bind_dn: "{{ iac__ldap__admin__bind_dn }}"
    bind_pw: "{{ iac__ldap__admin__bind_pw }}"
    #
    dn: "{{ iac__ldap__root_dc }}"
    objectClass:
      - dcObject
      - organization
    attributes:
      dc: "{{ iac__ldap__root_domain | split('.') | first }}"
      o: "{{ iac__ldap_org }}"

# Ensure User group matching Docker usergroup exists to allow auto-creation of LDAP user mail directories
- name: Create default user group for email users
  community.general.ldap_entry:
    server_uri: "{{ openldap_stack__ldap_uri }}"
    bind_dn: "{{ iac__ldap__admin__bind_dn }}"
    bind_pw: "{{ iac__ldap__admin__bind_pw }}"
    #
    dn: "{{ docker_mailserver__users_group_cn }}"
    objectClass:
      - top
      - posixGroup
    attributes:
      gidnumber: "{{ docker_mailserver__users_group_id }}"
      description: "{{ docker_mailserver__users_group_description }}"

###
###

- name: Create DCs
  loop: "{{ [iac__root_domain] + iac__alt_domains }}" # root domain + optional alt domains
  loop_control:
    index_var: domainId
  ansible.builtin.include_role:
    name: utilities__ldap
    tasks_from: build_dc
  vars:
    utilities__ldap__build_dc__domain: "{{ item }}"
