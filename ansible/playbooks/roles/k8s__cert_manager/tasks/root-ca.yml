---
- name: Declare Root CA Cert + CIssuer
  kubernetes.core.k8s:
    template:
      - path: templates/c-issuers/root-ca.yml.j2

#
# Generate Bundle
#
- name: Update NS so we allow bundle to expose secrets within it
  kubernetes.core.k8s:
    template:
      - path: templates/ns.yml.j2

- name: Wait for pod to become ready
  ansible.builtin.command: |
    kubectl wait
    pods -l app.kubernetes.io/name=trust-manager
    --namespace={{ cert_manager__namespace }}
    --for=condition=Ready
    --timeout=120s
  register: pods_ready
  changed_when: pods_ready.rc != 0

#
- name: Generate Root CA's Bundle
  kubernetes.core.k8s:
    template:
      - path: templates/ca-bundles/defaults-with-root-ca.yml.j2

#
# Install Org's Root CA
#

# might be extensively long depending on Issuer
- name: Wait for the associated secret to be generated
  ansible.builtin.command: kubectl get secret {{ cert_manager__org__root_ca__bundle }} -n {{ cert_manager__namespace }}
  register: secret_status
  changed_when: secret_status.rc != 0
  until: secret_status.rc == 0
  retries: 20
  delay: 20
