---
# ### NOT AVAILABLE / BUGGED, git clone prefered
- name: Add stable chart repo
  kubernetes.core.helm_repository:
    name: sentry
    repo_url: https://sentry-kubernetes.github.io/charts

# - name: Set facts
#   ansible.builtin.set_fact:
#     tmp_path: /tmp/sentry_k8s
# - name: Set facts
#   ansible.builtin.set_fact:
#     chart_path: "{{ tmp_path }}/sentry"
# - name: Git clone
#   ansible.builtin.git:
#     repo: https://github.com/sentry-kubernetes/charts
#     dest: "{{ tmp_path }}"
#     version: sentry-v23.3.0
# - name: helm build
#   ansible.builtin.command:
#     cmd: helm dependency build
#     chdir: "{{ chart_path }}"

- name: Install github secrets
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/ns.yml.j2
      - path: templates/github-app-secrets.yml.j2

##

- name: Postgres update
  register: postgres_pwd
  # use "ansible.builtin.shell" for pipeable commands
  ansible.builtin.shell: |
    set -o pipefail
    kubectl get secret -n sentry sentry-sentry-postgresql -o jsonpath="{.data.postgres-password}" | base64 -d
  failed_when: false # replacement for ignore_errors
  changed_when: postgres_pwd.rc != 0

- name: Kafka update
  register: kafka_cluster_id
  # use "ansible.builtin.shell" for pipeable commands
  ansible.builtin.shell: |
    set -o pipefail
    kubectl get secret -n sentry sentry-kafka-kraft-cluster-id -o jsonpath="{.data.kraft-cluster-id}" | base64 -d
  failed_when: false # replacement for ignore_errors
  changed_when: kafka_cluster_id.rc != 0

###

#
- name: Install Sentry w/ Helm
  kubernetes.core.helm:
    name: sentry
    chart_ref: sentry/sentry # "{{ chart_path }}"
    release_namespace: sentry
    create_namespace: true
    values:
      hooks:
        # Allow more in order for deploy process to succeed
        activeDeadlineSeconds: 10000

      user:
        create: true
        email: "{{ sentry__usermail }}"
        password: "{{ sentry__usermail_password }}"

      mail:
        backend: smtp
        useTls: true
        username: "{{ iac__donotreply_username }}"
        password: "{{ iac__donotreply_password }}"
        port: 587
        host: "docker-mailserver-docker-mailserver"
        from: "{{ iac__donotreply_email }}"

      sourcemaps:
        enabled: true

      redis:
        architecture: standalone
        replica:
          replicaCount: 1 # only master deployed

      kafka:
        kraft:
          clusterId: "{{ kafka_cluster_id.stdout | default('') }}"
        controller:
          replicaCount: 1
          controllerOnly: false
        zookeeper:
          replicaCount: 1

      rabbitmq:
        replicaCount: 1

      zookeeper:
        replicaCount: 1

      clickhouse:
        clickhouse:
          replicas: "1"
        tabix:
          replicas: "1"

      volumePermissions:
        enabled: true

      global:
        postgresql:
          auth:
            postgresPassword: "{{ postgres_pwd.stdout | default('') }}"

      nginx:
        enabled: false

      symbolicator:
        enabled: true

      sentry:
        worker:
          replicas: 1
        # Allow more resources in order for deploy process to succeed
        resources:
          limits:
            cpu: 512m
            memory: 4096Mi
          requests:
            cpu: 256m
            memory: 256Mi

      ingress:
        enabled: true
        hostname: "{{ k8s__sentry__external_hostname }}"
        ingressClassName: "{{ iac__ingress_nginx_class }}"
        annotations:
          # If you are using nginx ingress controller, please use at least those 2 annotations
          nginx.ingress.kubernetes.io/use-regex: "true"
          #
          external-dns.alpha.kubernetes.io/hostname: "{{ k8s__sentry__external_hostname }}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          #
          ingress-dashboard/title: Sentry
          ingress-dashboard/description: Tracks bugs and log of deployed apps
          ingress-dashboard/logo-url: /favicon.ico
          ingress-dashboard/assume-tls: "true"
          ingress-dashboard/hide: "false"

      service:
        type: LoadBalancer

      github: #   Reference -> https://docs.sentry.io/product/integrations/source-code-mgmt/github/
        appId: "{{ sentry__github_appid }}"
        appName: "{{ sentry__github_appname }}"
        existingSecret: "github-app-secrets"

      filestore:
        # Set to one of filesystem, gcs or s3 as supported by Sentry.
        backend: filesystem
        filesystem:
          persistence:
            enabled: true
            # will not be used for auxiliary services (RabbitMQ, Clickhouse, Kafka...), so kinda useless
            storageClass: local-path
