---
- name: Create Persistent Volume dir path
  tags: [config-more]
  ansible.builtin.file:
    path: "{{ iac__pv_path__docker_registry }}"
    state: directory
    mode: "0755"

- name: Prepare storage / certs for HTTPS / ingress
  tags: [config-more]
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/images-server/pv.yml.j2
      - path: templates/images-server/sc.yml.j2
      - path: templates/images-server/ingress.yml.j2

- name: Patch services + config to allow HTTPS & generate cert
  tags: [config-more]
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/images-server/https-patch/service.yml.j2
      - path: templates/images-server/https-patch/config.yml.j2
      - path: templates/images-server/https-patch/server-cert.yml.j2

# might be extensively long depending on provider
- name: Wait for the associated certificate's secret to be generated
  tags: [config-more]
  ansible.builtin.command: kubectl get secret {{ k8s__docker_registry__cert_secret_name }} -n {{ docker_registry__namespace }}
  register: secret_status
  changed_when: secret_status.rc != 0
  until: secret_status.rc == 0
  retries: 20
  delay: 20

##
##
##

# Allows 443 binding
- name: Patch replica set
  tags: [config-more]
  kubernetes.core.k8s_json_patch:
    kind: ReplicaSet
    namespace: "{{ docker_registry__namespace }}"
    name: registry
    patch:
      - op: add
        path: /spec/template/spec/containers/0/securityContext
        value:
          capabilities:
            add:
              - NET_BIND_SERVICE
            drop:
              - ALL
      - op: replace
        path: /spec/template/spec/containers/0/env
        value:
          - name: REGISTRY_STORAGE_DELETE_ENABLED
            value: "true"
          - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
            value: /var/lib/registry
      - op: replace
        path: /spec/template/spec/containers/0/ports
        value:
          - containerPort: 5000
            name: registry
            protocol: TCP
      - op: replace
        path: /spec/template/spec/containers/0/readinessProbe/httpGet/port
        value: 5000
      - op: replace
        path: /spec/template/spec/containers/0/readinessProbe/httpGet/scheme
        value: HTTPS
      - op: replace
        path: /spec/template/spec/containers/0/livenessProbe/httpGet/port
        value: 5000
      - op: replace
        path: /spec/template/spec/containers/0/livenessProbe/httpGet/scheme
        value: HTTPS
      - op: replace
        path: /spec/template/spec/containers/0/volumeMounts
        value:
          - mountPath: /var/lib/registry
            name: registry-pvc
          - mountPath: /etc/docker/registry
            name: registry__images-server-config
          - name: certs
            mountPath: /certs
      - op: replace
        path: /spec/template/spec/volumes
        value:
          - name: registry-pvc
            persistentVolumeClaim:
              claimName: registry-pvc
          - configMap:
              defaultMode: 420
              name: registry__images-server-config
            name: registry__images-server-config
          - name: certs
            secret:
              secretName: "{{ k8s__docker_registry__cert_secret_name }}"

- name: Search for pod exact name
  tags: [config-more]
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - k8s-app = registry
  register: pod_name_search

- name: Regenerate Registry Pod from replica set
  tags: [config-more]
  kubernetes.core.k8s:
    api_version: v1
    kind: Pod
    namespace: "{{ docker_registry__namespace }}"
    name: "{{ pod_name_search.resources[0].metadata.name }}"
    state: absent

- name: Delete default ingress if exists
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Ingress
    namespace: "{{ docker_registry__namespace }}"
    name: registry

- name: Override with our own ingress
  kubernetes.core.k8s:
    state: present
    template:
      - path: templates/images-server/ingress.yml.j2
