---
# Since pod wont be ready if it is not initialized
- name: Wait for the pod to be running state
  shell: >
    kubectl get pod vault-0 -n vault
    -o jsonpath='{.status.phase}'
  register: pod_status
  until: pod_status.stdout == "Running"
  retries: 10
  delay: 3

# RC:
# 0 - unsealed
# 1 - error
# 2 - sealed
- name: Get Vault status
  kubernetes.core.k8s_exec:
    namespace: "{{ hc_vault_namespace }}"
    pod: vault-0
    command: vault status -format=json
  register: vault_status
  no_log: true
  failed_when: vault_status.rc == 1

- name: Generate sealing keys
  kubernetes.core.k8s_exec:
    namespace: "{{ hc_vault_namespace }}"
    pod: vault-0
    command: vault operator init --namespace='vault' -format=json -key-shares=1 -key-threshold=1
  register: unseal_keys
  when: not (vault_status.stdout | from_json).initialized

- name: Show Unsealing keys to admin so he can save them
  ansible.builtin.debug:
    msg: "{{ unseal_keys.stdout }}"
  when: not unseal_keys is skipped

- name: Pause
  ansible.builtin.pause:
    prompt: Type Enter once keys have been saved
  when: not unseal_keys is skipped
  no_log: true

- name: Unseal
  kubernetes.core.k8s_exec:
    namespace: "{{ hc_vault_namespace }}"
    pod: vault-0
    command: vault operator unseal {{ item }}
  loop: "{{ (unseal_keys.stdout | from_json).unseal_keys_hex }}"
  register: unsealing
  when: not unseal_keys is skipped

- name: List all user methods
  kubernetes.core.k8s_exec:
    namespace: "{{ hc_vault_namespace }}"
    pod: vault-0
    command: "{{ item }}"
  loop:
    - vault login {{ (unseal_keys.stdout | from_json).root_token }}
    - vault auth list -format=json
  register: user_methods
  when: (not unseal_keys is skipped) and unsealing.rc == 0

- name: Activate userpass method
  kubernetes.core.k8s_exec:
    namespace: "{{ hc_vault_namespace }}"
    pod: vault-0
    command: vault auth enable userpass
  when: (not user_methods is skipped) and 'userpass/' in (user_methods.results[1].stdout | from_json)


- name: Check Already has admin user
  kubernetes.core.k8s_exec:
    namespace: "{{ hc_vault_namespace }}"
    pod: vault-0
    command: vault list auth/userpass/users | grep -w "admin"
  register: admin_exists
  when: not user_methods is skipped

- name: Activate admin user
  kubernetes.core.k8s_exec:
    namespace: "{{ hc_vault_namespace }}"
    pod: vault-0
    command: vault write auth/userpass/users/admin password={{ hc_vault_admin_password }} policies=admins
  when: (not admin_exists is skipped) and (admin_exists.stdout_lines | length) == 0

- name: Wait for pod to become Ready
  ansible.builtin.command: "kubectl wait pod/vault-0 --namespace=vault --for=condition=Ready --timeout=3s"
  register: pods_ready
  changed_when: pods_ready.rc != 0
