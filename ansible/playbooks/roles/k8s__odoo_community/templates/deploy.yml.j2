apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo
  namespace: "{{ k8s__odoo_community__namespace }}"
spec:
  replicas: 1
  strategy:
    # will wait for old pod to shutdown completely before runing new pod. Prevents logs to be filled with warnings about lockfiles
    type: Recreate
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      containers:
        - name: odoo
          image: odoo:latest
          imagePullPolicy: IfNotPresent

          securityContext:
            appArmorProfile: 
              type: RuntimeDefault
            # `allowPrivilegeEscalation: true` is required to support SGID via the `postdrop`
            # executable in `/var/mail-state` for Postfix (maildrop + public dirs):
            # https://github.com/docker-mailserver/docker-mailserver/pull/3625
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
            privileged: false
            capabilities:
              add:
                # file permission capabilities
                - CHOWN
                - FOWNER
                - MKNOD
                - SETGID
                - SETUID
                - DAC_OVERRIDE
                # network capabilities
                - NET_ADMIN  # needed for F2B
                - NET_RAW    # needed for F2B
                - NET_BIND_SERVICE
                # miscellaneous  capabilities
                - SYS_CHROOT
                - KILL
              drop: [ALL]
            seccompProfile:
              type: RuntimeDefault

          {# readinessProbe:
            failureThreshold: 12
            httpGet:
              path: /web/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5 #}

          volumeMounts:
            - name: data
              mountPath: /var/lib/odoo
              readOnly: false
            - name: config
              mountPath: /etc/odoo
              readOnly: true

          ports:
            - name: http
              containerPort: 8069
              protocol: TCP
            - name: longpolling
              containerPort: 8072
              protocol: TCP

          envFrom:
            - secretRef:
                name: odoo
            - configMapRef:
                name: odoo

      restartPolicy: Always

      volumes:
        # PVCs
        - name: data
          persistentVolumeClaim:
            claimName: odoo
        - name: config
          secret:
            secretName: odoo
