apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ k8s__odoo_community__metadata_name }}"
  namespace: "{{ k8s__odoo_community__namespace }}"
spec:
  revisionHistoryLimit: 0
  replicas: 1
  strategy:
    # will wait for old pod to shutdown completely before runing new pod. Prevents logs to be filled with warnings about lockfiles
    type: Recreate
  selector:
    matchLabels:
      app: "{{ k8s__odoo_community__app_selector_name }}"
  template:
    metadata:
      labels:
        app: "{{ k8s__odoo_community__app_selector_name }}"
    spec:
      restartPolicy: Always
      initContainers:
{% for addon_name, addon_info in k8s__odoo_community__addons.items() %}
        - name: {{ addon_name }}-addons
          image: registry.k8s.io/git-sync/git-sync:v4.4.0
          args:
            - "--repo={{ addon_info.url }}"
            - "--ref={{ addon_info.branch }}"
            - "--root=/tmp/git"
            - "--period=30s"
            - "--depth=1"
            - "--one-time"
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /tmp/git
              subPath: {{ addon_name }}
              name: extra-addons
{% endfor %}

      containers:
        - name: odoo
          image: "{{ k8s__odoo_community__odoo_docker_image }}"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0 # required
            runAsGroup: 0 # required

          # copied from bitnami/odoo's helm
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /web/health
              port: http
              scheme: HTTP
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 10

          # copied from bitnami/odoo's helm
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 600
            periodSeconds: 30
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5

          volumeMounts:
            - name: data
              mountPath: "{{ k8s__odoo_community__odoo_instance__data_dir }}"
              subPath: data
              readOnly: false
            - name: extra-addons
              mountPath: "{{ k8s__odoo_community__odoo_instance__addons_dir }}"
              readOnly: true
            - name: config
              mountPath: /etc/odoo
              readOnly: true
{% if k8s__odoo_community__use_local_backup_pvc | default(false) %}
            - name: local-backups
              mountPath: /backups/local
              readOnly: false
{% endif %}
          ports:
            - name: http
              containerPort: 8069
              protocol: TCP
            - name: longpolling
              containerPort: 8072
              protocol: TCP
      volumes:
        # PVCs
        - name: data
          persistentVolumeClaim:
            claimName: "{{ k8s__odoo_community__metadata_name }}"
        - name: config
          secret:
            secretName: "{{ k8s__odoo_community__metadata_name }}"
        - name: extra-addons
          persistentVolumeClaim:
            claimName: extra-addons
{% if k8s__odoo_community__use_local_backup_pvc | default(false) %}
        - name: local-backups
          persistentVolumeClaim:
            claimName: local-backups
{% endif %}