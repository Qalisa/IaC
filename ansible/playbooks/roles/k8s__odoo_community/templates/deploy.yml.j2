apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo
  namespace: "{{ k8s__odoo_community__namespace }}"
spec:
  replicas: 1
  strategy:
    # will wait for old pod to shutdown completely before runing new pod. Prevents logs to be filled with warnings about lockfiles
    type: Recreate
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      containers:
        - name: odoo
          image: odoo:latest
          imagePullPolicy: IfNotPresent

          securityContext:
            runAsUser: 0 # required
            runAsGroup: 0 # required

          {# # copied from bitnami/odoo's helm
          readinessProbe:
            failureThreshold: 12
            httpGet:
              path: /web/health
              port: http
              scheme: HTTP
            # useful, because even at first boot, Odoo might expose this API even if the database is not properly setup !
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

          # copied from bitnami/odoo's helm
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 600
            periodSeconds: 30
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5 #}

          volumeMounts:
            - name: data
              mountPath: "{{ k8s__odoo_community__odoo_instance_data_dir }}"
              readOnly: false
            - name: config
              mountPath: /etc/odoo
              readOnly: true

          ports:
            - name: http
              containerPort: 8069
              protocol: TCP
            - name: longpolling
              containerPort: 8072
              protocol: TCP

      restartPolicy: Always

      volumes:
        # PVCs
        - name: data
          persistentVolumeClaim:
            claimName: odoo
        - name: config
          secret:
            secretName: odoo
