---
- name: Wait until deployment is available
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: odoo
    namespace: "{{ k8s__odoo_community__namespace }}"
  register: deployment_info
  until: deployment_info.resources[0].status.availableReplicas | default(0) | int >= 1
  retries: 30       # Adjust the number of retries based on expected deployment startup time
  delay: 10         # Delay in seconds between each retry

##
## AUTHENTICATE
##

- name: Authenticate and get user ID
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "common"
        method: "login"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ k8s__odoo_community__odoo_instance__default__admin_username }}"
          - "{{ k8s__odoo_community__odoo_instance__default__admin_password }}"
      id: 1
    return_content: true
  register: login_response
  no_log: true

- name: Extract user ID
  ansible.builtin.set_fact:
    user_id: "{{ login_response.json.result }}"
  when: login_response.json.result is defined

##
## UPDATE FROM DEFAULT admin/admin username
##

- name: Search for admin user by login
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "object"
        method: "execute"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ user_id }}"
          - "{{ k8s__odoo_community__odoo_instance__default__admin_password }}"
          - "res.users"
          - "search"
          - [["login", "=", "{{ k8s__odoo_community__odoo_instance__default__admin_username }}"]]
      id: 2
    return_content: true
  register: search_response
  no_log: true

- name: Extract admin user IDs
  ansible.builtin.set_fact:
    admin_user_ids: "{{ search_response.json.result }}"
  when: search_response.json.result is defined

- name: Update admin user login and password
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "object"
        method: "execute"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ user_id }}"
          - "{{ k8s__odoo_community__odoo_instance__default__admin_password }}"
          - "res.users"
          - "write"
          - "{{ admin_user_ids }}"
          - login: "{{ iac__postmaster_email }}"
            password: "{{ iac__postmaster_password }}"
      id: 3
    return_content: true
  when: admin_user_ids | default([]) | length > 0
  no_log: true
