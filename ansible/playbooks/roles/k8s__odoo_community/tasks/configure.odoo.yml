---
- name: Wait until deployment is available
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: odoo
    namespace: "{{ k8s__odoo_community__namespace }}"
  register: deployment_info
  until: deployment_info.resources[0].status.availableReplicas | default(0) | int >= 1
  retries: 30       # Adjust the number of retries based on expected deployment startup time
  delay: 10         # Delay in seconds between each retry


##
## AUTHENTICATE
##

- name: Authenticate and get user ID
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "common"
        method: "login"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ k8s__odoo_community__odoo_instance__admin_username }}"
          - "{{ k8s__odoo_community__odoo_instance__admin_password }}"
    return_content: true
  register: login_response
  no_log: true

- name: Extract user ID
  ansible.builtin.set_fact:
    user_id: "{{ login_response.json.result }}"
  when: login_response.json.result is defined

##
## Activate currency
##

- name: Find currency ID
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "object"
        method: "execute_kw"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ user_id }}"
          - "{{ k8s__odoo_community__odoo_instance__admin_password }}"
          - "res.currency"
          - "search"
          - [[["name", "=", "{{ k8s__odoo_community__odoo_instance__wanted_currency }}"]]]
          - {"context": {"active_test": false}, "limit": 1}
    return_content: true
  register: currency_search
  no_log: true

- name: Extract Currency ID
  ansible.builtin.set_fact:
    currency_id: "{{ currency_search.json.result.0 }}"
  when: currency_search.json.result | default([]) | length > 0

- name: Activate currency
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "object"
        method: "execute"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ user_id }}"
          - "{{ k8s__odoo_community__odoo_instance__admin_password }}"
          - "res.currency"
          - "write"
          - ["{{ currency_id }}"]  # Use the ID from currency_search
          - {"active": true}
    return_content: true
  when:
    - currency_search.json.result | default([]) | length > 0


##
## UPDATE COMPANY data
##

- name: Search for default company
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "object"
        method: "execute"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ user_id }}"
          - "{{ k8s__odoo_community__odoo_instance__admin_password }}"
          - "res.company"
          - "search"
          - [["name", "=", "{{ k8s__odoo_community__odoo_instance__default__company_name }}"]]  # Default name; adjust as needed
    return_content: true
  register: company_search_response
  no_log: true

- name: Extract company ID
  ansible.builtin.set_fact:
    company_id: "{{ company_search_response.json.result.0 }}"
  when: company_search_response.json.result | default([]) | length > 0

- name: Search for new country ID
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "object"
        method: "execute"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ user_id }}"
          - "{{ k8s__odoo_community__odoo_instance__admin_password }}"
          - "res.country"
          - "search"
          - [["code", "=", "{{ k8s__odoo_community__odoo_instance__wanted_locale }}"]]
    return_content: true
  register: country_search_response
  no_log: true

- name: Extract country ID
  ansible.builtin.set_fact:
    lang_id: "{{ country_search_response.json.result.0 }}"
  when: country_search_response.json.result | default([]) | length > 0

- name: Update company
  ansible.builtin.uri:
    url: "{{ k8s__odoo_community__odoo_instance__jsonrpc }}"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "call"
      params:
        service: "object"
        method: "execute"
        args:
          - "{{ k8s__odoo_community__odoo_instance__db_name }}"
          - "{{ user_id }}"
          - "{{ k8s__odoo_community__odoo_instance__admin_password }}"
          - "res.company"
          - "write"
          - "{{ company_id }}"
          - { "country_id": "{{ lang_id }}", "currency_id": "{{ currency_id }}", "account_fiscal_country_id": "{{ lang_id }}"}
    return_content: true
  when: company_id is defined and lang_id is defined and currency_id is defined
  no_log: true

##
##
##

- name: Ask for user to install Chart of Accounting
  ansible.builtin.pause:
    prompt: Please install manually Chart of Accounting (Parameters > Account > CoA select box, to your prefered language). Then, press return to continue.
