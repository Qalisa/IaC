---
- name: Add stable chart repo
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
    force_update: true

- name: Install Postgres w/ Helm
  kubernetes.core.helm:
    name: "{{ k8s__odoo_community__db__name }}"
    chart_ref: bitnami/postgresql
    release_namespace: "{{ k8s__odoo_community__namespace }}"
    create_namespace: true
    wait: true
    values:
      auth:
        #
        postgresPassword: "{{ k8s__odoo_community__db__config__admin_password }}"
        #
        username: "{{ k8s__odoo_community__db__config__username }}"
        password: "{{ k8s__odoo_community__db__config__password }}"
        #
        database: "{{ k8s__odoo_community__db__config__db_name }}"

- name: Install STS Middleware
  kubernetes.core.k8s:
    template:
      - path: templates/middleware.yml.j2

- name: Install Odoo w/ Helm
  kubernetes.core.helm:
    name: odoo
    chart_ref: bitnami/odoo
    release_namespace: "{{ k8s__odoo_community__namespace }}"
    create_namespace: false
    wait: true
    values:
      odooSkipInstall: false
      #
      extraEnvVars:
        # enable Database manager
        - name: ODOO_LIST_DB
          value: "Yes"
      #
      odooEmail: "{{ iac__postmaster_username }}@{{ iac__root_domain }}"
      odooPassword: "{{ iac__postmaster_password }}"
      #
      smtpHost: "{{ docker_mailserver__internal_smtp_server }}"
      smtpPort: "{{ docker_mailserver__internal_smtp_preferred_port }}"
      smtpUser: "{{ iac__donotreply_username }}"
      smtpPassword: "{{ iac__donotreply_password }}"
      #
      postgresql:
        enabled: false
      externalDatabase:
        host: "{{ k8s__odoo_community__db__name }}.{{ k8s__odoo_community__namespace }}.{{ iac__svc_cluster_host }}"
        user: "{{ k8s__odoo_community__db__config__username }}"
        password: "{{ k8s__odoo_community__db__config__password }}"
        database: "{{ k8s__odoo_community__db__config__db_name }}"
        postgresqlPostgresPassword: "{{ k8s__odoo_community__db__config__admin_password }}"
      #
      extraContainerPorts:
        - containerPort: 8072
          name: longpolling
          protocol: TCP
      service:
        type: ClusterIP
        extraPorts:
          - name: longpolling
            port: 8072
            protocol: TCP
            targetPort: longpolling
      ingress:
        enabled: true
        hostname: "{{ k8s__odoo_community__extername_hostname }}"
        extraRules:
          - backend:
              service:
                name: odoo
                port:
                  name: longpolling
            path: /websocket
            pathType: ImplementationSpecific
        annotations:
          #
          traefik.ingress.kubernetes.io/router.middlewares: "{{ k8s__odoo_community__namespace }}-security-headers@kubernetescrd"
          #
          external-dns.alpha.kubernetes.io/hostname: "{{ k8s__odoo_community__extername_hostname }}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          #
          ingress-dashboard/title: Odoo
          ingress-dashboard/description: All-in-one CRM-like app
          ingress-dashboard/logo-url: /favicon.ico
          ingress-dashboard/assume-tls: "true"
          ingress-dashboard/hide: "false"

- name: Add server definition for pgadmin
  ansible.builtin.include_role:
    name: utilities__pgadmin
    tasks_from: add_server_definition
  vars:
    utilities__pgadmin__add_server_definition__id: odoo
    utilities__pgadmin__add_server_definition__name: Odoo
    utilities__pgadmin__add_server_definition__host: "{{ k8s__odoo_community__db__name }}.{{ k8s__odoo_community__namespace }}.{{ iac__svc_cluster_host }}"
    utilities__pgadmin__add_server_definition__maintenance_db: "{{ k8s__odoo_community__db__config__db_name }}"
    utilities__pgadmin__add_server_definition__username: "{{ k8s__odoo_community__db__config__username }}"
    utilities__pgadmin__add_server_definition__password: "{{ k8s__odoo_community__db__config__password }}"
