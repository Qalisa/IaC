---
- name: Create namespace
  kubernetes.core.k8s:
    template:
      - path: templates/ns.yml.j2

- name: Create Persistent Volume dir path
  ansible.builtin.file:
    path: "{{ k8s__docker_mailserver_path_to_config_folder }}"
    state: directory
    mode: "0755"

- name: Recover default Calico's pool IP range from default name
  ansible.builtin.command: kubectl get ippool default-pool -o jsonpath='{.spec.cidr}'
  changed_when: kube_pods_subnet.rc != 0
  register: kube_pods_subnet

- name: Add whitelisted IPs for inner cluster access
  ansible.builtin.template:
    src: "templates/mailserver/{{ item }}.j2"
    dest: "{{ k8s__docker_mailserver_path_to_config_folder }}/{{ item }}"
    mode: "0755"
  loop:
    - fail2ban-jail.cf

- name: Get my public IP from ipify.org
  community.general.ipify_facts:

## REQUIRED TO BE INSTALLED FIRST, since generated secret by this certificate is done async
- name: Install Certificate first
  kubernetes.core.k8s:
    template:
      - path: templates/certificate.yml.j2

# might be extensively long depending on Issuer
- name: Wait for the associated certificate's secret to be generated
  ansible.builtin.command: kubectl get secret {{ k8s__docker_mailserver__cert_secret_name }} -n {{ docker_mailserver__namespace }}
  register: secret_status
  changed_when: secret_status.rc != 0
  until: secret_status.rc == 0
  retries: 20
  delay: 20

- name: Then, Install Docker Mailserver
  kubernetes.core.k8s:
    template:
      - path: templates/mailserver/postfix-reject-config.yml.j2
      - path: templates/mailserver/pv.yml.j2
      - path: templates/mailserver/config.yml.j2
      - path: templates/mailserver/ldap-secret.yml.j2
      - path: templates/mailserver/service.yml.j2
      - path: templates/mailserver/deploy.yml.j2
