---
- name: Create namespace
  kubernetes.core.k8s:
    template:
      - path: templates/ns.yml.j2

###
### Certificate from Issuer
###

## REQUIRED TO BE INSTALLED FIRST, since generated secret by this certificate is done async
- name: Request certificate generation from Issuer with cert-manager's Certificate CRD
  kubernetes.core.k8s:
    template:
      - path: templates/certificate.yml.j2

# might be extensively long depending on Issuer
- name: Wait for the associated certificate's secret to be generated
  ansible.builtin.command: kubectl get secret {{ k8s__docker_mailserver__cert_secret_name }} -n {{ docker_mailserver__namespace }}
  register: secret_status
  changed_when: secret_status.rc != 0
  until: secret_status.rc == 0
  retries: 20
  delay: 20

###
### user-patches.sh
###

- name: Render the user patch bash script
  ansible.builtin.template:
    src: templates/mailserver/dms/user-patches.sh.j2
    dest: /tmp/user-patches.sh  # Temporary location to store the rendered script
    mode: "0775"
    comment_start_string: "{[#" # would clash with bash syntax if not redefining
    comment_end_string: "#]}" # would clash with bash syntax if not redefining

- name: Create ConfigMap with the user patch script
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: dms-user-patches
        namespace: "{{ docker_mailserver__namespace }}"
      data:
        user-patches.sh: "{{ lookup('file', '/tmp/user-patches.sh') }}"

- name: Remove temporary user patch script
  ansible.builtin.file:
    path: /tmp/user-patches.sh
    state: absent

###
### postfix reject
###

- name: Template exec on postfix reject regex
  ansible.builtin.template:
    src: templates/mailserver/postfix/header_checks.pcre.j2
    dest: /tmp/postfix-reject.pcre  # Temporary location to store the rendered script
    mode: "0775"

- name: Create ConfigMap
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: dms-postfix-reject
        namespace: "{{ docker_mailserver__namespace }}"
      data:
        header_checks.pcre: "{{ lookup('file', '/tmp/postfix-reject.pcre') }}"

- name: Remove temporary
  ansible.builtin.file:
    path: /tmp/postfix-reject.pcre
    state: absent

###
### Whole install
###

- name: Then, Install Docker Mailserver
  kubernetes.core.k8s:
    template:
      - path: templates/mailserver/pvc.yml.j2
      - path: templates/mailserver/config.yml.j2
      - path: templates/mailserver/secret.yml.j2
      - path: templates/mailserver/service.yml.j2
      - path: templates/mailserver/deploy.yml.j2
