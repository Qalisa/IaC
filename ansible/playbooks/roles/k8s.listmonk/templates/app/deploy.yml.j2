apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: listmonk
  annotations:
    argocd.argoproj.io/sync-options: Delete=false # prevent deletion of this deployment on argocd chart deletion
spec:
  selector:
    matchLabels:
      app: listmonk
  template:
    metadata:
      labels:
        app: listmonk
    spec:
      restartPolicy: Always
      initContainers:
        # This container clones the desired git repo to the EmptyDir volume.
        - name: git-clone
          image: alpine/git # Any image with git will do
          args:
            - clone
            - --single-branch
            - --
            - {{ listmonk_static_dir_repo_url }} # Your repo
            - "{{ listmonk_static_dir }}" # Put it in the volume
          securityContext:
            runAsUser: 1 # Any non-root user will do. Match to the workload.
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: static
              mountPath: "{{ listmonk_static_dir }}"
        - name: database-ready
          image: foobic/pg_isready
          env:
            - name: HOST 
              value: db.listmonk
            - name: RETRIES
              value: "50"
          command: ["/scripts/pg_isready.sh"]
      containers:
        - name: listmonk
          image: listmonk/listmonk:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args: ["./listmonk --install --yes --idempotent && ./listmonk --static-dir={{ listmonk_static_dir }}"]
          volumeMounts:
            - name: uploads
              mountPath: "{{ listmonk_uploads_pv_path }}"
              readOnly: false
            - name: static
              mountPath: "{{ listmonk_static_dir }}"
              readOnly: true
          envFrom:
            - secretRef:
                name: listmonk-admin
            - configMapRef:
                name: app
          ports:
            - name: app
              containerPort: 9000
              protocol: TCP
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: uploads
        - name: static
          emptyDir: {}