#
# WHERE GLOBAL-ISH IAC infos regarding services are stored
#
---
# refers to any of "roles/k8.cert-manager/templates/issuer-*.yml.j2" metadata.name which will issue certificates
# CAREFUL ! In production, 50 requested certificates per week for letsencrypt ! (https://letsencrypt.org/docs/rate-limits/)
default_cluster_issuer: zerossl-prod # letsencrypt-prod
trust_managed_namespaces: [arc-runners]
org_ca_name: selfsigned
org_ca_cert_secret_name: "trust-manager.{{ org_ca_name }}"

# default storage class
local_storage_class_name: local-storage

generated_creds_dir: "{{ playbook_dir ~ '/../../creds' }}"
terraform_project_path: "{{ playbook_dir ~ '/../../terraform' }}"

#
master_node_name: node1

# which emails is to be said that will register the certificates
postmaster_username: postmaster
postmaster_email: "{{ postmaster_username }}@{{ root_domain }}"
donotreply_username: donotreply
donotreply_email: "{{ donotreply_username }}@{{ root_domain }}"
mx_hostname: mail
docker_mailserver_host: "{{ mx_hostname }}.{{ root_domain }}"

# should be the same as "group_vars/k8s_cluster/addons".ingress_nginx_class
ingress_nginx_class: nginx

github_org_url: https://github.com/{{ github_org }}
argocd_app_of_apps_repository_url: "{{ github_org_url }}/argocd-repository"

#
argocd_account_for_github_syncer: github-syncer
argocd_account_for_argo_watcher: watcher

# OpenLDAP
openldap_stack__namespace: openldap-stack
openldap_stack__ldap_server_hostname: openldap
openldap_stack__ldap_uri: ldap://{{ openldap_stack__ldap_server_hostname }}.{{ openldap_stack__namespace }}/
openldap_stack__dc_query_string: "{{ root_domain | split('.') | map('regex_replace', '^(.*)$', 'dc=\\1') | list | join(',') }}"
openldap_stack__ldap_admin_user: admin
openldap_stack__ldap_admin_cn: cn={{ openldap_stack__ldap_admin_user }},{{ openldap_stack__dc_query_string }}

#
listmonk_admin_username: admin
listmonk_logo_url: https://{{ root_domain }}/logo.png
listmonk_favicon_url: https://{{ root_domain }}/logo.png
listmonk_from_email: "{{ listmonk_site_name }} <{{ postmaster_email }}>"
k8s__listmonk_static_dir_repo_url: "{{ github_org_url }}/listmonk-static"

#
registry_host: registry.kube-system
registry_default_push_user: "{{ github_org | lower }}" # must always be lowercase

#
matomo_username: admin

#
sentry_usermail: "{{ postmaster_email }}"

#
buildkit_remote_socket: buildkit-buildkit-service.arc-buildkit:1234
buildkit_local_mount_path: /cache

# minimum 3 chars
minio_tenant_username: admin
minio_access_key_id: "{{ minio_tenant_username }}"
minio_tenant_backup_storage_bucket_name: default-backups # https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
minio_tenant_backup_storage_bucket_region: minio
minio_tenant_s3_url: https://minio.minio-tenant:443

# where should the persistent volume created for X service, store its data on node
portainer_pv_path: /var/k8s-data/portainer
docker_mailserver_pv_path: /var/k8s-data/mailserver
hc_vault_pv_path: /var/k8s-data/hc-vault
roundcube_pv_path: /var/k8s-data/roundcube
registry_pv_path: /var/k8s-data/registry
openldap_pv_path: /var/k8s-data/openldap
listmonk_db_pv_path: /var/k8s-data/listmonk/db
listmonk_uploads_pv_path: /var/k8s-data/listmonk/uploads
matomo_pv_db_path: /var/k8s-data/matomo/db
matomo_pv_app_path: /var/k8s-data/matomo/app
github_arc_cache_pv_path: /var/k8s-data/gha-cache
buildkit_cache_pv_path: /var/k8s-data/buildkit-cache
