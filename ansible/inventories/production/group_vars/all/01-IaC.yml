#
# WHERE GLOBAL-ISH, default IAC infos regarding services are stored
#
---
#######################
### MIGHT CUSTOMIZE ###
#######################

# SMTP / IMAP servers hard-requires + autoconfig soft-requires unproxied (NO CLOUDFLARE !) certificates
# @info refers to any of "roles/k8.cert-manager/templates/issuer-*.yml.j2" metadata.name which will issue certificates
# CAREFUL ! In production, 50 requested certificates per week for letsencrypt ! (https://letsencrypt.org/docs/rate-limits/)
iac__unproxied_certificate_issuer: letsencrypt-prod # zerossl-prod

# catch all, smtp / imap TLD on the root_domain
docker_mailserver__third_level_domain: mail

#
iac__postmaster_username: postmaster
iac__donotreply_username: donotreply
iac__donotreply_name: Do Not Reply

# Root OU : groupOfNames : [users CN]
iac__ldap__groups__yaml: |-
  argocd:
    - groupName: admin
      members:
        - cn={{ iac__postmaster_username }}

#
sentry__usermail: "{{ iac__postmaster_username }}@{{ iac__root_domain }}"

# minimum 3 chars
minio__tenant__username: admin

#
matomo__admin_username: admin

#
docker_mailserver__supervisord_ui__user: admin

#
argocd__app_of_apps__repo_name: argocd-repository # github repo name under organization, containing app of apps argocd manifest

#
listmonk__static_dir__repo_name: listmonk-static # github repo name under organization, containing listmonk static dir
listmonk__admin_username: admin
listmonk__logo_url: https://{{ iac__root_domain }}/logo.png
listmonk__favicon_url: https://{{ iac__root_domain }}/logo.png

#
harbor__registry_username: "{{ iac__github_org | lower }}" # must always be lowercase

#
pgadmin__username_email: "{{ iac__postmaster_username }}@{{ iac__root_domain }}"

############################
### SHOULD NOT CUSTOMIZE ###
############################

#
iac__svc_cluster_host: svc.cluster.local

# would use it when using databases (https://stackoverflow.com/a/71560186/3021058)
iac__local_path_storage_class: local-path

# https://docs.k3s.io/cli/server#networking
iac__k3s__servicelb__ip_range: "10.42.0.0/16"

# root domain + optional alt domains
iac__all_domains: "{{ [iac__root_domain] + iac__alt_domains }}"

#
iac__prefered_lang__sub: "{{ iac__prefered_lang | split('_') | first }}"

# any mail users created should not be below this number, per convention and prevent overlaping specific users
iac__mail_users__uid_base: 1000

# MUST be the same as in "ansible/inventories/production/hosts.yaml"
iac__master_node_name: node1 # default

# where temporary mount of a Longhorn autogenerated PVC volume should be
iac__utilities__longhorn_mount_path: /mnt/longhorn

#
cert_manager__namespace: cert-manager
cert_manager__org__issuer: selfsigned # dummy issuer; issues Org Root CA + dummy certificates
cert_manager__org__root_ca: "{{ iac__root_domain }}-root-ca"
cert_manager__org__root_ca__bundle: "{{ cert_manager__org__root_ca }}.bundle" # default, bundled CAs for a system to trust, including our own root cert

# where generated passwords and other tokens are to be stored while generating services
iac__generated_creds_dir: "{{ playbook_dir ~ '/../../creds' }}"

#
iac__github_org_url: https://github.com/{{ iac__github_org }}

#
iac__resolv__resolved_path: /etc/systemd/resolved.conf.d
iac__resolv__dns_config_file: 10-k3s-coredns.conf

#
github_arc__buildkit__remote_socket: buildkit-buildkit-service.arc-buildkit:1234
github_arc__buildkit__local_mount_path: /cache

#
minio__access_key_id: "{{ minio__tenant__username }}"
minio__tenant__s3_url: https://minio.minio-tenant:443
minio__tenant__backup_storage__bucket_name: default-backups # https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
minio__tenant__backup_storage__bucket_region: minio

#
listmonk__from_email: "{{ listmonk__site_name }} <{{ iac__postmaster_email }}>"

#
harbor__namespace: harbor
harbor__name: harbor
harbor__external_hostname: registry.{{ iac__root_domain }}
# we need the service that responds to /v2/ path
harbor__internal_hostname__registry_v2: "{{ harbor__name }}-core.{{ harbor__namespace }}.{{ iac__svc_cluster_host }}"
harbor__internal_hostname__registry_v2__url: https://{{ harbor__internal_hostname__registry_v2 }}
harbor__admin_username: admin
harbor__org_project_name: "{{ iac__github_org | lower }}"

#
iac__ldap__root_domain: iac.local
iac__ldap__root_dc: "{{ iac__ldap__root_domain | split('.') | map('regex_replace', '^(.*)$', 'dc=\\1') | list | join(',') }}"
iac__ldap__admin__bind_dn: cn=admin,{{ iac__ldap__root_dc }}
iac__ldap__username_attr: mail
iac__ldap__email_attr: mail
iac__ldap__user_oc: inetOrgPerson

#
iac__traefik__ldap_middleware__name: ldap-auth
iac__traefik__ldap_middleware__namespace: "{{ openldap_stack__namespace }}"
iac__traefik__ldap_middleware__ref: "{{ iac__traefik__ldap_middleware__namespace }}-{{ iac__traefik__ldap_middleware__name }}@kubernetescrd"

#
docker_mailserver__namespace: docker-mailserver
docker_mailserver__server_hostname: docker-mailserver
docker_mailserver__server_label: docker-mailserver
docker_mailserver__users_group_cn: cn=email-users,{{ iac__ldap__root_dc }}
docker_mailserver__users_group_description: |
  Users that want to have account behind a password at {{ iac__root_domain }}'s mailserver. Required for all mail users.
  (No need for this group to have children, just make sure GID is used when creating mail user)
# Email users (possibly POSTFIX + DOVECOT, eg sending AND receiving email)
# SHOULD MATCH GID of docker-mailserver's dovecot id group, which create folder structure for IMAP users
docker_mailserver__users_group_id: 5000

#
docker_mailserver__internal_smtp_server: "{{ docker_mailserver__server_hostname }}.{{ docker_mailserver__namespace }}.{{ iac__svc_cluster_host }}"
docker_mailserver__internal_smtp_preferred_port: 587

#
openldap_stack__namespace: openldap-stack
openldap_stack__ldap_server_hostname: openldap
openldap_stack__ldap_internal_hostname: "{{ openldap_stack__ldap_server_hostname }}.{{ openldap_stack__namespace }}.{{ iac__svc_cluster_host }}"
openldap_stack__ldap_uri: ldap://{{ openldap_stack__ldap_internal_hostname }}/
openldap_stack__users_home: /home/users

#
argocd__namespace: argocd
argocd__project_name: default
argocd__jwt_tokens_secret: accounts-immortal-jwt

#
docker_mailserver__external_hostname: "{{ docker_mailserver__third_level_domain }}.{{ iac__root_domain }}"

# default from root domain
iac__postmaster_email: "{{ iac__postmaster_username }}@{{ iac__root_domain }}"
iac__donotreply_email: "{{ iac__donotreply_username }}@{{ iac__root_domain }}"

#
cf_zto__namespace: zero-trust-system
cf_zto__ldap_policy__access_group_id: ldap-users
cf_zto__ldap_policy__name: Allow {{ iac__root_domain }} LDAP Users

#
kyverno__oc_label_as_env__version: BUILDX_OC_LABEL__VERSION # tag
kyverno__oc_label_as_env__revision: BUILDX_OC_LABEL__REVISION # commit

#
k3s__default_namespace: kube-system

#
pgadmin__namespace: pgadmin
pgadmin__serverdef_secret_name: server-definitions
